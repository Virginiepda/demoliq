security:
    encoders:
        App\Entity\User:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email    #propriété qui va nous permettre de nous authentifier
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true      #par défaut, il est à true, le pare feu est actif sur tout le site
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            logout:
                path: app_logout


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/questions/ajouter$, roles: ROLE_USER }
        - { path: ^/account, roles: ROLE_USER}
        - { path: ^/(connexion|inscription)$, allow_if: "not is_granted('ROLE_USER')"}
        # - { path: ^/admin, roles: ROLE_ADMIN }    #si on veut protéger notre back office, il suffit de décommenter et ajouter /admin à la fin de l'url des pages en admin
        # - { path: ^/profile, roles: ROLE_USER }
